Objecticve : Get quick handson of Deeplearning on image data to classification problem
Learnings: 1) Scaling and encoding required on fetures
           2) Encoding required for data to be predicted if it is categorical
           3) Cross validation, drop out use -- will use in next version
           4) Use of Convolution and Pooling can improve accuracy -- Need to be tested.
           5) Accuracy on Train Set:0.9939, Accuracy on Test Set:0.96800 -- Not Bad for first time.. :) Looks like overfitting is causing accuracy % difference in test and train. Dropout can help to improve accuracy.
           

#import libraries
import pandas as pd
import numpy as np
from keras.models import Sequential
from keras.layers import Dense

training_set = pd.read_csv('train.csv')
testing_set = pd.read_csv('test.csv')

#Dataframe to Arrays
X_train = training_set.iloc[:, 1:].values
y_train = training_set.iloc[:, 0:1].values
X_test = testing_set.iloc[:,:].values

# Feature Scaling
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

#Categorical Encoding
import keras
totalNumberOfdigits = 10
y_train = keras.utils.to_categorical(y_train, totalNumberOfdigits)

# Initialising the ANN
classifier = Sequential()
classifier.add(Dense(units = 784, kernel_initializer = 'uniform', activation = 'relu', input_dim = 784))
classifier.add(Dense(units = 300, kernel_initializer = 'uniform', activation = 'relu'))
classifier.add(Dense(units = 10, kernel_initializer = 'uniform', activation = 'softmax'))
classifier.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])

# Fitting the ANN to the Training set
classifier.fit(X_train, y_train, batch_size = 10, epochs = 100)

y_pred = classifier.predict(X_test)
Y_pred_classes =list(np.argmax(y_pred,axis = 1) )

# Genearte Output
image_id=list(range(1,28001))
output=pd.DataFrame()
output['ImageId']=image_id
output['Label']=Y_pred_classes

output.to_csv("submission.csv",index=False)

-------------------------------------------------------------------------------
Accuracy on Train Set
Epoch 98/100
42000/42000 [==============================] - 68s 2ms/step - loss: 0.1887 - accuracy: 0.9921 
Epoch 99/100
42000/42000 [==============================] - 69s 2ms/step - loss: 0.1032 - accuracy: 0.9936ETA: 26s - loss: 0.1064 - accuracy: 0.9942
Epoch 100/100
42000/42000 [==============================] - 67s 2ms/step - loss: 0.0960 - accuracy: 0.9939 
----------------------------
Accuracy on Test Set :  0.96800
----------------------------






